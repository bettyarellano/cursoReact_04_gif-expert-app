{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAsCeA,EAnCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAGP,GAAH,mBAAiBO,OACzCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,+DACuDC,UAAWH,GADlE,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAOD,EAAIC,GACXC,MAAOF,EAAIE,MACXV,IAAG,UAAIQ,EAAIG,cAAR,aAAI,EAAYC,iBAAiBZ,QAVzB,kBAaZM,GAbY,4CAAH,sDCaLO,EAZK,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE1B,OACI,sBAAKc,UAAU,oCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,8BAAIA,EAAJ,WCmBGO,EAtBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEf,ECFwB,SAAEA,GAE3B,MAA0Bd,mBAAS,CAC9BqB,KAAU,GACVa,SAAU,IAFf,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACPxB,EAASC,GACLwB,MAAM,SAAAC,GAEJH,EAAS,CACNf,KAAUkB,EACVL,SAAU,SAGnB,CAAEpB,IAEEqB,EDhB2BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEYvBgB,EAxBM,WAEjB,MAAoCzC,mBAAS,CAAC,WAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCVlC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.497f3666.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length>2){\n            setCategories(categories=>[inputValue,...categories ]);\n            setInputValue('');\n        }\n\n    }\n\n    return (\n \n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n};\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n\nexport default AddCategory\n","\nexport const getGifs = async ( category ) => {\n    const url      = `https://api.giphy.com/api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=12&api_key=tbfLuIWiHvfW85HcduTGXpeoXfklP4SS`\n    const resp     = await fetch(url);\n    const { data } = await resp.json();\n\n\n    const gifs = data.map( img => { \n        return {\n            id:    img.id,\n            title: img.title,\n            url:   img.images?.downsized_medium.url,\n        }\n    })\n    return gifs;\n}\n","import React from 'react'\n\nconst GifGridItem = ({ title, url}) => {\n\n    return (\n        <div className=\"animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title} </p>\n        </div>\n    )\n}\n\n\n\nexport default GifGridItem","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem\n                            key= {img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = ( category ) => {\n\n   const [state, setState] = useState({\n        data    : [],\n        loading : true\n   });\n\n   useEffect(() => {\n      getGifs( category )\n         .then( imgs => {\n\n            setState({\n               data    : imgs,\n               loading : false\n            });\n         })\n   }, [ category ])\n\n   return state;\n\n}\n\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Mickey']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>  \n           \n            <ol>\n               {\n                    categories.map( category => (\n                        <GifGrid\n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n};\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render( \n  <GifExpertApp />, \n  document.getElementById('root')\n);"],"sourceRoot":""}